You're constantly challenging yourself from different angles and different contexts. The way that I think about it is you're borrowing time from your future as you. In order to become a master at this, you have to be able to mix it and match it. Anyway, thank you so much for your time. And I have learned a lot, and I have a lot to think about now. Every couple of months, I find some members in our I can study program who are active and supportive in our community, and I offer them some 30 minutes free coaching sessions. Some of you do seem to really like my coaching style content, so I decided to record some of these and post them on YouTube. Before we jump in, I'd appreciate if you give this video a like, and if you're interested in joining the full program yourself, then you can check out icanstudy.com. There's a link in the description. My name is Edgar Cabrera. I'm from Mexico studying software engineer. It's in the University of LaSalle. That's about it. I'm in, I mean, second year of the career, and I'm still about halfway through the career. Awesome. And what's the main, I suppose, things that you would like me to help you with? Yeah, I think one of the things that I have seen a lot of focus, and it's like, I think it's very important. It's about the relationship between practice and what you learn in the course. So what I want to learn is, do I need to always, like, during every single lecture or every single video, do I always have to immediately go and practice those stuff before advancing into any other stuff of the course? Or can I, like, I have this in mind, and then I can continue, like, a few lectures from the course and then practice, like, everything in bulk, having the consideration that I need to keep that relationship, like one to five between theory and practice. So whenever you learn any new technique or any new skill, you just. What you're trying to do is prevent yourself from having overload. So there always needs to be this theory practice balance, right? Yeah. So you. You can technically go at any pace that you want. It just depends on the density of the theory and your ability to convert that into practice. And usually what I find is that the amount that you'd need to know to understand how to use any new technique or any new learning strategy. If we think about the total amount that you can know about a certain technique, and if you know 100% of this technique, that means that you can do it perfectly accurately. Then the amount that you can know about a technique based purely on just a theoretical understanding without any real experience or practice using it is usually no more than 25%, like at a maximum. And this is why I often say there's a one to five ratio, at least. Yeah. Sometimes it's very. It's much lower. Sometimes it's only two or 3%. This is really obvious when we think about other skills, like, you could understand how to do go rock climbing. Yeah. But the amount of actual practice you'd need to not fall off and die is much, much more. And so this is the same thing here, is that the amount of theory depends on the difficulty of the technique, and then it depends on how. How much of it that you've understood. But the tricky part, and this is the reason why I usually tell people to be very conservative and just, like, learn one thing and then practice, practice, practice, practice is because this is a relatively small percentage. So what that means is someone that, you know, has, you know, really, really understands the theory of very deeply before practice. At most, they're going to understand, like, 25% of it. But if you understand less of it, maybe you understand 10% less. And maybe that means that you only understand 15%. Now, that doesn't seem like a very big difference, 25% versus 15%. But relative to how much you'd need to know, it's a big difference. Right. Because the amount of practice that you need here, this is now one to four in this situation, whereas in here, it's closer to, like, one to, you know, like, seven to be able to do it, which means that you need, like, almost double the amount of practice to be able to gain the mastery there. So the other issue is that when you have skills and techniques applied in the real world, under real world settings with, like, multiple curriculums and pressures and, you know, assessments and things like that, there are other variables that are then added on. So let's say now we've got two different techniques that are added on at the same time. Well, now we have to try to practice two separate techniques and understand the cause and effect relationship between the techniques and the impact that it's having. And then even at just two techniques, that can become, you know, quite challenging. So one of the things that I would normally, as a rule, recommend is, first of all, to just play it safe. Yeah. Because there's really nothing worse than wasting time on going too fast. Yeah. Yeah. Which is counterintuitive. But the second thing is that you can try to do more and try to move a little bit faster, but when you're doing the technique be really, really attentive to two things. The first is how much concentration and mental effort does it take for me to just be able to do the technique, not even thinking about doing it correctly, just doing it. And then the second thing is how effective am I finding the technique and is that aligned with how effective I'm told it's meant to be? When I teach people techniques, I'm pretty clear about how effective it's meant to be. Some of them are going to be like, amazing. Some of them, it's like it's improves a little bit. So if I've said something improves a little bit and you try it and it's easy to use and it's improved it a little bit, and the amount of effort you need to spend to do the technique is very low. That's something that we call german load. It's a complicated topic, but if that happens, then you can move on to add the next technique. And if you add the next technique and you now think, okay, it's still pretty easy, then you can move on to the next one. It gets harder though, because as you add more and more techniques, the whole system also needs to function. So you might be able to do each individual technique very well, but when you try to do all three simultaneously, it might get much, much harder. So what that would mean is you need to just slow down there. But if you use a technique and you think, okay, I'm getting the result that I'm told I should get, but the amount of effort and concentration I need to be able to pull it off is very high, then you should not. Because as soon as you add another technique on, it's gonna be harder. Or you think it's very easy to do it, but I'm not getting the result that I'm. That I'm meant to be getting, that's even worse because it means you're not even doing it right. So the effort is not there because we're not doing the right thing. It's kind of like saying, hey, I think going to the gym and working out is really easy. I don't spend any effort at all lifting weights. And then you see what they're doing, and all they're doing is going inside and looking at themselves in the mirror. So it's like they're not even doing the right process. Yeah, so that's usually what I look for. If I see that someone is using a new technique, they're finding that it's relatively easy and they're getting the effect that they're meant to be getting, then they should be ready to move on. And then when they add a new technique on, then we look again. The whole system isn't working. One of the things also that you have to be really, really mindful is that when we are building the techniques, we have to build them. Like with building the foundations of a house, like they are stacking and building on top of each other. A lot of the time what will happen is that people will start using a technique. They'll be fine at it. This is fine. They're work. They're using it very well, and then they'll add another technique on and they're like, okay, that's fine. They're using it well, and then they'll come to add on a new technique. And because it's too hard to use all three at the same time, they stop using this one and now they're using this one and then they add another one on. And then, you know, this, this one kind of falls through. And eventually what happens is that, you know, everything will sort of topple and it becomes a mess and the system is broken down and then they start running into really fundamental issues. Really common example here would be like they're really getting into the mapping process and non linear note taking and they're doing that and doing that and doing that and they're forgotten completely about doing space retrieval. Yeah, right. So it's kind of like a long answer to your question, but did that answer it? No. Yeah, totally. Because I had like that because when I started, like seeing stuff through the course and through your YouTube channel and because I already have like some notion on how learning happens and how to learn new skills and stuff. Because I really, like, I really enjoy the process of acquiring new stuff to do, like being able to be the better version of myself. So I have always failed in that process, in the process of practicing enough because I get so passionate about the topic that I just need to learn more and learn more and learn more. And if you do it just for the. Because you just like the topic and you are just interested about it, I think that that's okay. But if you want to apply it, you really need to practice it before going to the next thing. Because it has happened to me, for example, with coding. Because when I started, before I started going to university, like in high school and stuff, I saw a lot of YouTube videos about coding. And then when I tried to do it, I realized that I couldn't retrieve anything about what I have supposedly learned. So it's just something that I knew had a problem with, with retrieving stuff to actually apply it, but I didn't exactly know how to do it. Like how to batch that hole. Yeah. Another thing that I'll add on to that I just thought of when you were explaining is that you have to make sure that you challenge yourself properly before assessing that you're able to do it correctly. And this is the idea of interleaving, right, is that it's not enough just to say, okay, I can do it well, in the simple, direct method of practice or execution that I've learned. Coding is actually a really good example of this, is that it's really, really possible. And actually, frankly, very easy, because there's so many courses and things out there that just teach you about coding. It's very easy to learn, like a lot of theory about lots of different functions, and then you can follow everything step by step. Okay, I've learned about this function. Okay, can I write that line of code? Yes. Okay. Can I turn that into something else? Yes. All right. Like, let's move on to the next one. Let's introduce some more variables. Can I, like, declare a variable? Yes. Okay, can I call the variable? Yes. Can I use it in a function? Yes. And then you can continue to do that where you're able to do it simply and simply, but until you actually step outside and say, okay, well, let's try to use all of these together in a different context. Outside of how I learned it, am I able to manipulate and use this information in a different way and still retain that level of competency? And this is the, this is the way that it has to be trained. You take a piece of theory, you practice it, you can do it simply. Sometimes you can do it in one go. Sometimes it takes a little bit more. After you do that, you can add on the next thing, you add on the next thing, and then you try to use it, and then you try to mix it, and then you try and. Can you still do it? Okay, now you add on the next one. So you're constantly mixing and interleaving and challenging yourself from different angles and different contexts with each new thing that you add on. And the way that I think about it is you're borrowing time from your future to do this. Like, in order to become a master at this, you have to do all of this anyway. You have to be able to mix it and match it anyway. Usually what people will do is they'll try to get a mastery of the things step by step first and then they'll try to mix it together to get the mastery. But by doing that, they're suffering because they're now operating at a lower efficiency right now. So they're going to struggle with actually being able to learn it properly right now because of the fact that they, their memory is not going to be as strong and they're going to forget things. And now they have to spend more time learning and relearning. I call this learning debt. Right. And so instead, if we just use the time we were going to spend anyway and we do it now, then we can gain that mastery so that by the time we are at the bottom and we're actually properly done, we also have a very, very high level of mastery. It also is much less stressful in curriculums or in an exam, because when you get to the time of an exam, you know, you're basically ready to sit the exam straight away. There's nothing more that has to happen. But, you know, people generally tend to want to go fast and just cover as much stuff as possible. And so, yeah, yeah, I'm actually like really guilty about that because you see out of these YouTube videos that is like, learn JavaScript or learn go or learn x language in 5 hours. So in your head you think, I just need to get through this course and then I'm gonna know it. Then I try to do something with the language and can't remember anything. Yeah. When you have finished like a semester of in university and then the finals are coming up, and then you realize that because of trying to like, free up time, free up time by going as fast as possible, you just have like. Yeah, like you said, you have just stolen yourself from being able to actually learn properly from the beginning. And it's less stressful if you can do like, these tiny steps from the beginning than trying to recompile everything at once. The other stuff that I wanted to ask about is I usually use obsidian. Obsidian is like the place where I have my most notes. I first tried to do stereochasting. I couldn't retrieve anything because I had so many notes and because serial casting, like, didn't work for me, the fact that my brain couldn't remember what exact combination of words I used to retrieve a note or something. There is a plugin in obsidian where you can do mind bumps. So it's like this kind of non linear note taking. I think that the question is, do you think there is like a connection between the physical way of note taking being like, better or being superior in any way than having this digital way of non linear note taking? That's a good question. And it's something that I've experimented with a lot and I've read the research on. And in the research space, there isn't a definitive answer. If there is more of a conclusion, it does lean more towards doing it physically. Yeah, but the reason that physical tends to be better is not necessarily because there's anything wrong with digital. It's probably because the tools that are designed are not cognitively optimizing enough. There are some advantages with being able to do things physically, and I suppose the way that I do it is essentially a hybrid using a tablet. It's digital, but it's freehand. The reason that I still, despite having spent so many hours trying a different room, or obsidian, or Lucidchart, or many other different types of nonlinear mapping softwares, and I get emails literally every day from mind mapping software, people that want to sponsor me in a video, and I say no to all of them because of the fact that I don't think there's actually a software that really does this well at the moment. Here are some of the advantages that you get with freehand that I just don't see happening with the digital. The first thing with digital, it's too easy to just create relationships and just space and just, like, put things down. And the fact that there's no barrier means that the information is prioritized and processed less. And I think this is the same thing as to why we saw that research said that handwritten notes are better than typed notes, because with type notes, what was found was that you tend to write more when you're typing, which means that there's less processing going on. And so we know that longer word count is associated with poor performance when it comes to note taking. And I think it's the same sort of thing is that, yes, you can create a relationship, yes, you can tag the information, and yes, technically it's organized, but it's organized in the software doesn't mean that it's actually organized in your brain, because the software, that's so much of the heavy lifting for you. So that's the first thing, is that it's just too easy and it doesn't force the prioritization. The second thing is that a big, big part, in fact, probably 80% to 90% of the learning process, when you're learning new information, is just hypothesizing structures, rewriting them, and redoing it and trying to make that fit. It's not as easy to do that when you're committing it to a software, because often when you're creating, the note actually creates the record of it. And so it's hard to actually then just delete it. And when you create it, there's like a certain minimum amount you have to invest to creating that. So it's harder to create sort of the scratch pad experience where you're just like committing, revising, deleting, moving and that sort of thing. The third thing is that there are many more ways of representing information freehand than there is usually by software. And if it is possible software, there's so many clicks that it takes to be able to do that. So for example, like if I wanted to, if I wanted to like make some notes that were saying like, okay, here's a line of text here, and this sort of thing is related to this one here. Okay, I could say, I could then say that. Let's say that there is another thing here and another thing here and another thing here and another thing here. Right. So if this was an app, probably the only way that this can be done is like this, boom, boom, and then maybe like, boom, boom, boom. Okay, maybe, maybe like this. And then this is how it would end up looking. Yeah, but this is completely different to, for example, something like this, right? Yeah, yeah, yeah. So like this is just a single example and there's so many other combinations that we can, we can create from this that if we just create it as a binary, is there a relationship or not or. No, then it, it's just everything just becomes a line. But when we think what is the characteristic, the quality, the importance, the weight, the spacing of that relationship in relation to everything else, then it opens up a lot of other things. And then the final benefit is that it's much easier to do visual anchoring, which is to visually make a certain concept appear more important and have maybe imagery involved in it to actually create like a little memory landmark that our brain is going to find easier to hold on to. So for example, I could have like a. Right, so now that becomes a visual, you know, landmark. And if this was, I don't know what this concept is, but it's related to some plant and mountain, you know, like that would be relevant. Yeah. So, yeah, for me, I think freehand is still the way to go. I don't. Maybe one day software will catch up to be able to do this. We're actually thinking about creating a software ourselves because there's lots of room for improvement. But at the moment, I don't think it does a good job. I think Obsidian is a really good app for second brain management, but second brain management is used as a reference tool. It's a reference software, it's not for primary encoding and it's a completely different way, but you could have multiple, you could have maps that are stored within obsidian and then maps could be related to other maps. As a conceptual network that would work fine. But the primary encoding, I don't think I would. I personally would not put it on Obsidian, and I don't. Yeah, yeah, no, I have, like, before everything doing, or like, taking seriously, like, trying to learn as best as I can. I do try to, like, I have been using of CN as a primary encoding, but I don't think I use it in a way that most people use it because, like, after watching a lot of videos, a lot of your videos actually seeing the course, I think that the best way, like, simplify a ton of information, like the ton of research that is into learning. I think that you just need to be try to maximize your cognitive resources to it with a less amount of effort so that you can encode everything properly, that you don't need to revise things more often, and that you don't get exhausted about doing the process. People think about doing mind maps on obsidian. People think about putting their mind maps on obsidian, but you can also think about putting obsidian in your map. So, for example, you can have like a node coming out across here and you can just literally say, like, hash, like, yeah, you know, like whatever the tag is, and then all the detailed information, like all the code snippets that might be related to that particular function that's related there. And so you've got this as a reference and then you've got obsidian just purely as a second brain. Yeah. So if we understand clearly what apps, not just obsidian, but like, apps like Obsidian, are really useful for, but then where its limitations are, then we can use it to its full effect. But it's just like any tool, really, when you try to make it do something that it's not the best four, you will suffer for it. Thank you so much for your time. And you have. Thank you for coming on and asking your questions. I hope that helped. Yeah, a lot, actually. I have learned a lot and I have a lot to think about now.